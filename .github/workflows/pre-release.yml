name: Build Pre-Releases

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+rc[0-9]+'
jobs:
  # ---------------------------------
  # Testing
  # ---------------------------------
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r dev-requirements.txt
      - name: Lint with flake8
        run: |
          # Stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --statistics
      - name: Test with pytest
        run: |
          pytest
    
  # -----------------------------
  # Release on github (pre-release)
  # -----------------------------
  release:
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -U setuptools wheel
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Build artifact
        run: python setup.py sdist bdist_wheel
      - name: Release on GitHub
        uses: actions/create-release@v1
        env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
         tag_name: ${{ github.ref }}
         release_name: Pre-Release ${{env.tag}}
         prerelease: true
         draft: false
#      - name: Release on Pypi
#        env:
#          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
#          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
#        run: |
#          twine upload -u "$TWINE_USERNAME" -p "$TWINE_PASSWORD" dist/*
